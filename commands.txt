
 python3 -m venv env        
 pip install -r requirements.txt        

 django-admin startproject django_project . 
  python manage.py startapp properties                
 docker network ls  

 -------------------------------------------------------------------
docker-compose up --build       
docker-compose exec django_cli python manage.py makemigrations        
docker-compose exec django_cli python manage.py migrate zero                                                                            
docker-compose exec ollama bash 
ollama list                                            
docker-compose exec ollama ollama pull llama3.2   

docker-compose exec django_cli python manage.py process_hotels         
docker-compose exec django_cli python3 manage.py showmigrations

# Get all hotels
hotels = Hotel.objects.all()
$ docker-compose exec django_cli python manage.py test properties.tests.test_cli
docker-compose exec django_cli python manage.py createsuperuser
 docker-compose exec django_cli python manage.py migrate properties  zero  

--------------------------------------------------------------------


To run the tests using Docker Compose, use these commands:

To run all tests:

bashCopydocker-compose exec django_cli python manage.py test properties.tests

To run specific test files:

bashCopy# Test CLI
docker-compose exec django_cli python manage.py test properties.tests.test_cli

# Test Models
docker-compose exec django_cli python manage.py test properties.tests.test_models

# Test Admin
docker-compose exec django_cli python manage.py test properties.tests.test_admin

To run tests with coverage:

bashCopy# Install coverage first
docker-compose exec django_cli pip install coverage

# Run tests with coverage
docker-compose exec django_cli coverage run --source='.' manage.py test properties.tests

# Generate coverage report
docker-compose exec django_cli coverage report

# Generate HTML coverage report
docker-compose exec django_cli coverage html

---------------------------------------------------------------------------------------------------------------------------


To remove all things from Docker (including containers, images, volumes, and networks), you can follow these steps:

Stop all running containers:

docker stop $(docker ps -aq)

Remove all containers (stopped or running):

docker rm $(docker ps -aq)
Remove all images:

docker rmi $(docker images -q)

Remove all volume
docker volume rm $(docker volume ls -q)

Remove all networks:


docker network rm $(docker network ls -q)

Prune all unused Docker objects (this includes containers, images, networks, and volumes that are not in use):


docker system prune -a --volumes
This will remove all Docker containers, images, volumes, and networks from your system. Be cautious, as this action cannot be undone.